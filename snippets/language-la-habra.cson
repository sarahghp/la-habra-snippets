'.source.clojure':

  # FULL ITEMS
  'atom':
    'prefix': 'atom'
    'body': """
      (def ${1:name}
        (->>
         ${2:guts}
         (atom)))
      """

  # HELPERS
  'anim':
    'prefix': 'anim'
    'body': '(anim "${1:name}" "${2:dur}" "${3:infinite}")'

  'background lines':
    'prefix': 'lines'
    'body': '(gen-bg-lines ${1:color} (mod frame ${2:number}))'

  'freakout':
    'prefix': 'freak'
    'body': """
      (when (nth-frame ${1:frame} frame)
        (freak-out ${2:@width}
                   ${3:@height}
                   ${4:r}
                   ${5:num}
                   ${6:color}))
      """

  'new-freakout':
    'prefix': 'freako'
    'body': '(new-freakout ${1:max-x} ${2:max-y} ${3:scale} ${4:num} "${5:name}")'


  'map-index':
    'prefix': 'mapin'
    'body': """
      (map-indexed
       (fn [idx ${1:item}]
         ${2:body})
       (take ${3:num}
             (repeatedly #(rand-nth [${4:items}]))))
    """

  'half-width':
    'prefix': 'half-width'
    'body': '(* 0.5 @width)'

  'half-height':
    'prefix': 'half-height'
    'body': '(* 0.5 @height)'

  'stroke':
    'prefix': 'stroke'
    'body': """
      (style {:stroke ${1:color}
              :stroke-width ${2:width}
              :stroke-dasharray ${3:length}
              :stroke-dashoffset ${3:length}})
    """

  'style':
    'prefix': 'st'
    'body': '(style {${1:symbol} ${2:string}})'

  'transform-origin':
    'prefix': 'to'
    'body': ':transform-origin "center"'

  'translate':
    'prefix': 'translate'
    'body': '"translate(${1:x}vh, ${2:y}vh)"'

  'translate-center':
    'prefix': 'tc'
    'body': '(str "translate(" 40 "vw " 40 "vh)")'

  'when':
    'prefix': 'when'
    'body': '(when (nth-frame ${1:4} frame))'

  # CIRCLES
  'circle':
    'prefix': 'cir'
    'body': """
      (->>
       (gen-circ ${1:color} ${2:x} ${3:y} ${4:r})
       (draw))
      """

  'circle atom':
    'prefix': 'circlea'
    'body': """
      (->>
       (gen-circ ${1:color} ${2:x} ${3:y} ${4:r})
       (draw)
       (atom))
      """

  'circle when':
    'prefix': 'circ'
    'body': """
      (->>
       (gen-circ ${1:color} ${2:x} ${3:y} ${4:r})
       (draw)
       (when (nth-frame ${5:4} frame)))
      """

  'circle short':
    'prefix': 'shcircle'
    'body': '(gen-circ ${1:color} ${2:x} ${3:y} ${4:r})'

  # LINES
  'line':
    'prefix': 'li'
    'body': """
      (->>
       (gen-line [${1:first-point}] [${2:second-point}] ${3:color} ${4:width})
       (draw))
      """

  'line atom':
    'prefix': 'linea'
    'body': """
      (->>
       (gen-line [${1:first-point}] [${2:second-point}] ${3:color} ${4:width})
       (draw)
       (atom))
      """

  'line when':
    'prefix': 'line'
    'body': """
      (->>
       (gen-line [${1:first-point}] [${2:second-point}] ${3:color} ${4:width})
       (draw)
       (when (nth-frame ${5:4} frame)))
      """

  'line short':
    'prefix': 'shline'
    'body': '(gen-line [${1:first-point}] [${2:second-point}] ${3:color} ${4:width})'

  # POLYGONS (MANUAL)
  'poly':
    'prefix': 'po'
    'body': """
      (->>
       (gen-poly ${1:color} [${2:points}])
       (draw))
      """
  'poly atom':
      'prefix': 'polya'
      'body': """
        (->>
         (gen-poly ${1:color} [${2:points}])
         (draw)
         (atom))
        """

  'poly when':
    'prefix': 'poly'
    'body': """
      (->>
       (gen-poly ${1:color} [${2:points}])
       (draw)
       (when (nth-frame ${6:4} frame)))
      """

  'poly short':
    'prefix': 'shpoly'
    'body': '(gen-poly ${1:color} [${2:points}])'

  # RECTS
  'rect':
    'prefix': 'rec'
    'body': """
      (->>
       (gen-rect ${1:color} ${2:x} ${3:y} ${4:w} ${5:h})
       (draw))
      """

  'rect atom':
      'prefix': 'recta'
      'body': """
        (->>
         (gen-rect ${1:color} ${2:x} ${3:y} ${4:w} ${5:h})
         (draw)
         (atom))
        """

  'rect when':
    'prefix': 'rect'
    'body': """
      (->>
       (gen-rect ${1:color} ${2:x} ${3:y} ${4:w} ${5:h})
       (draw)
       (when (nth-frame ${6:4} frame)))
      """

  'rect short':
    'prefix': 'shrect'
    'body': '(gen-rect ${1:color} ${2:x} ${3:y} ${4:w} ${5:h})'

  # SHAPES
  'shape':
    'prefix': 'sha'
    'body': """
      (->>
       (gen-shape ${1:color} ${2:shape})
       (style {:transform "translate(${3:x}vw, ${4:y}vh) scale(${5:scale})"})
       (draw))
      """

  'shape atom':
    'prefix': 'shapea'
    'body': """
      (->>
       (gen-shape ${1:color} ${2:shape})
       (style {:transform "translate(${3:x}vw, ${4:y}vh) scale(${5:scale})"})
       (draw)
       (atom))
      """

  'shape when':
    'prefix': 'shape'
    'body': """
      (->>
       (gen-shape ${1:color} ${2:shape})
       (style {:transform "translate(${3:x}vw, ${4:y}vh) scale(${5:scale})"})
       (draw)
       (when (nth-frame ${6:4} frame)))
      """

  'shape short':
    'prefix': 'shshape'
    'body': '(gen-shape {1:color} ${2:shape})'

  # GRID
  'grid group':
    'prefix': 'grid-group'
    'body': """
      (->>
       (gen-grid
         ${1:cols} ${2:rows}
         {:col ${3:offset} :row ${4:offset}}
         (->>
          sh${5:shorthand}))
         (map #(style ${6:styles} %))
         (map #(anim ${7:animations} %))
         (map draw)
         (map #(gen-group {:style {:transform-origin "center" }} %)))
    """

  'line grid':
    'prefix': 'grid-line'
    'body': """
    (gen-line-grid ${1:color} ${2:stroke-width}
      ${3:cols} ${5:rows}
      {:col ${6:-offset} :row ${7:-offset}})
    """

  'rows':
    'prefix': 'rows'
    'body': """
      (gen-rows ${1:color} ${2:stroke-width} ${3:num} ${4:offset})
    """

  'cols':
    'prefix': 'cols'
    'body': """
      (gen-cols ${1:color} ${2:stroke-width} ${3:num} ${4:offset})
    """
